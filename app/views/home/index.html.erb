
<h1>VisitrTrackr (beta)</h1>

<div id="status">
	Initializing JS...
</div>

<div id="the-result">
</div>

<!-- google sez: <div id="map-canvas" style="width: 100%; height: 100%"></div> -->
<p style="margin:0 auto;width:400px;height:320px" id="geo-wrapper">
	Here be maps.
</p>

<script type="text/javascript" src="https://maps.googleapis.com/maps/api/js?key=AIzaSyAPXXKA0xggy7R1XR-N1GE7D-PS47OK2ak&sensor=false">
</script>

<%= javascript_include_tag "jquery.cookie.js" %>

<%= javascript_include_tag "geoPosition.js" %>

<%= javascript_tag do %>

	var user_agent = "<%= escape_javascript @user_agent %>";
	
	// Uses the geolocation API / geoPosition result to update the page
	function use_geoloc_result(loc) {
		$( "#status").html("Using location from GeoLocation API.");
		update_visits(loc.coords.latitude, loc.coords.longitude, user_agent);
		var map = show_map(loc.coords.latitude, loc.coords.longitude);
		show_visits(map);
	}
	
	// Uses the IP geolocation result from the backend to update the page	
	function use_request_loc() {
		$( "#status").html("Using server-side fallback.");
		
		var rloc_latitude = <%= @location[:latitude] %>;
		var rloc_longitude = <%= @location[:longitude] %>;
		
		update_visits(rloc_latitude, rloc_longitude, user_agent);
		var map = show_map(rloc_latitude, rloc_longitude);
		show_visits(map);
	}
	
	// Try to get the users position
	if (geoPosition.init()) {
		$( "#status").html("I can haz Geo!");
		geoPosition.getCurrentPosition(use_geoloc_result, use_request_loc);
	} else {
		$( "#status").html("No GeoLocation API...");
		use_request_loc();
	}
	
<% end %>

